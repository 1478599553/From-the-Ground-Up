// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "${mc_version}-${mod_status}${mod_version}"
group = mod_package // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_id

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160518"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { url "http://dvs1.progwml6.com/files/maven" }
    maven { url "http://blamejared.com/maven" }
}

dependencies {
    deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}"
    deobfCompile "slimeknights.mantle:Mantle:${mc_version}-${mantle_version}"
    deobfCompile "slimeknights:TConstruct:${mc_version}-${tc_version}"
    deobfCompile "MineTweaker3:MineTweaker3-MC${mc_version2}-Main:${mc_version}-${crafttweaker_version}"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", "${mod_status}${mod_version}"
    inputs.property "mcversion", mc_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':"${mod_status}${mod_version}", 'mcversion':mc_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
